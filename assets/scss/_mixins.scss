@mixin stretch {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0
}

@mixin cent {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

@mixin centX {
	position: absolute;
	left: 50%;
	transform: translateX(-50%);
}

@mixin centY {
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
}

@mixin background($args...) {
	background: $args no-repeat;
	background-size: cover;
	background-position: center;
}

@function pxtopercent($target, $parent: 1170) {
	@return percentage($target / $parent);
}

@mixin calc($property, $expression) {
	#{$property}: -moz-calc(#{$expression});
	#{$property}: -webkit-calc(#{$expression});
	#{$property}: calc(#{$expression});
}

@mixin line($bottom, $color: $first-color) {
	&:after {
		content: "";
		position: absolute;
		left: 50%;
		bottom: $bottom;
		transform: translateX(-50%);
		width: 8rem;
		height: .3rem;
		border-radius: 5px;
		background-color: $color;
	}
}

@mixin clearfix {
	&:after{
		content: "";
		display: block;
		clear: both;
	}
}

@mixin scrollbar($width, $color) {
	&::-webkit-scrollbar {
		width: $width;
	}

	&::-webkit-scrollbar-thumb {
		border-radius: 2px;
		box-shadow: inset $width*2 0 0  $color;
	}
}

@mixin border-radius($radius, $pos:"base") {

	@if $pos == top {
		border-radius: $radius $radius 0 0;
	} 
	@else if $pos == bottom {
		border-radius: 0 0 $radius $radius;
	} 
	@else if $pos == right {
		border-radius: 0 $radius $radius 0;
	} 
	@else if $pos == left {
		border-radius: $radius 0 $radius 0;					
	} 
	@else if $pos == 'base'{
		border-radius: $radius $radius $radius $radius;
		overflow: hidden;
	}
}


@mixin triangle($direction, $color: currentcolor, $width: 1em , $height: 2em) {
	@if not index(top right bottom left, $direction) {
		@error "Direction must be either `top`, `right`, `bottom` or `left`.";
	}

	width: 0;
	height: 0;
	content: '';
	z-index: 2;

	border-#{$direction}: $width solid $color;

	$perpendicular-borders: ($height/2) solid transparent;

	@if $direction == top or $direction == bottom {
		border-left:   $perpendicular-borders;
		border-right:  $perpendicular-borders;
		} @else if $direction == right or $direction == left {
			border-bottom: $perpendicular-borders;
			border-top:    $perpendicular-borders;
		}
	}

	@mixin img-gradient($color, $opacity) {
		&:after {
			content: "";
			@include stretch;
			border-radius: 50%;
			background-image: linear-gradient(0deg, rgba($color, $opacity));
		}
	}